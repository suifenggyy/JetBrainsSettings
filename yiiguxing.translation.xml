<application>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1740376448707" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryFontPreviewText" value="海内存知己&#10;天涯若比邻" />
    <option name="primaryLanguage" value="CHINESE" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="63b0de4ba0a22178" />
      </youdao-translate>
    </option>
  </component>
  <component name="Translation.States">
    <histories>
      <item value="Artifact" />
      <item value="Constraint" />
      <item value="Calibrate" />
      <item value="constraint" />
      <item value="paral" />
      <item value="dual" />
      <item value="Regulation" />
      <item value="DILATE" />
      <item value="Integration" />
      <item value="Entrust" />
      <item value="bypass flow" />
      <item value="User Tags Loader" />
      <item value="KB Recommendation" />
      <item value="arbitrate" />
      <item value="protein" />
      <item value="regional" />
      <item value="archiver" />
      <item value="calibrate" />
      <item value="Alignment" />
      <item value="非真实发送" />
      <item value="Checks whether local variables shade global ones. After a symbol is defined as local, dereferencing it outside its scope will trigger an error instead of seeking a global variable of the same name. To further reduce potential naming ambiguity errors, global variables (ie non local) must be declared to be assigned (@link JexlContexthas(String) ) when this flag is on; attempting to set an undeclared global variables will raise an error." />
      <item value="请求中的Export Type未配置正确的Main Doc Type" />
      <item value="unsolvable" />
      <item value="arithmetic" />
      <item value="fetch" />
      <item value="cartesian Product" />
      <item value="polish" />
      <item value="Discarding" />
      <item value="according" />
      <item value="determinvalue" />
      <item value="Validate" />
      <item value="Cursor" />
      <item value="Acquires the lock unless the current thread is interrupted. Acquires the lock if it is not held by another thread and returns immediately, setting the lock hold count to one. If the current thread already holds this lock then the hold count is incremented by one and the method returns immediately. If the lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of two things happens: The lock is acquired by the current thread; or Some other thread interrupts the current thread. If the lock is acquired by the current thread then the lock hold count is set to one. If the current thread: has its interrupted status set on entry to this method; or is interrupted while acquiring the lock, then InterruptedException is thrown and the current thread's interrupted status is cleared. In this implementation, as this method is an explicit interruption point, preference is given to responding to the interrupt over normal or reentrant acquisition of the lock. Throws: InterruptedException – if the current thread is interrupted" />
      <item value="SKETCH" />
      <item value="Unsupport" />
      <item value="Cardinality" />
      <item value="permit" />
      <item value="Approval" />
      <item value="INTERVAL" />
      <item value="COALESCE" />
      <item value="生成文件超时, 请1min后在OSS路径下查询文件是否生成,或稍后重新请求. OSS文件夹路径:" />
      <item value="生成文件成功,请在下面地址中下载文件" />
      <item value="CONCLUSION" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CATALAN" value="2" />
        <entry key="CHINESE" value="35" />
        <entry key="CHINESE_SIMPLIFIED" value="4" />
        <entry key="ENGLISH" value="42" />
        <entry key="FRENCH" value="1" />
      </map>
    </option>
  </component>
</application>